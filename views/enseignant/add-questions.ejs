<h2>Ajouter des questions à l'examen</h2>

<div class="exam-info">
    <h3><%= exam.titre %></h3>
    <p><%= exam.description %></p>
    <p><strong>Public:</strong> <%= exam.public %></p>
</div>

<form action="/enseignant/examens/<%= exam.uuid %>/add-questions" method="POST" enctype="multipart/form-data" class="question-form">
    <div class="form-group">
        <label for="enonce">Énoncé :</label>
        <textarea name="enonce" id="enonce" required class="form-control"></textarea>
    </div>

    <div class="form-group">
        <label for="media">Joindre un fichier (image, audio, vidéo) :</label>
        <input type="file" name="media" id="media" class="form-control" accept="image/*,audio/*,video/*">
    </div>

    <div class="form-group">
        <label for="type">Type de question :</label>
        <select name="type" id="type" required class="form-control">
            <option value="qcm">QCM</option>
            <option value="directe">Question directe</option>
        </select>
    </div>

    <div id="qcm-fields" class="form-group">
        <label>Choix :</label>
        <div id="choix-container" class="choix-container">
            <div class="choix-input">
                <input type="text" name="choix[]" placeholder="Choix 1" class="form-control">
                <button type="button" class="btn-remove" onclick="removeChoix(this)">X</button>
            </div>
            <div class="choix-input">
                <input type="text" name="choix[]" placeholder="Choix 2" class="form-control">
                <button type="button" class="btn-remove" onclick="removeChoix(this)">X</button>
            </div>
        </div>
        <button type="button" id="add-choix-btn" class="btn-secondary">Ajouter un choix</button>

        <div class="form-group mt-3">
            <label for="bonneReponse">Réponse correcte :</label>
            <select name="bonneReponse" id="bonneReponse" class="form-control">
                <option value="">Sélectionnez la bonne réponse</option>
            </select>
        </div>
    </div>

    <div id="directe-fields" class="form-group" style="display:none;">
        <label for="bonneReponseDirecte">Réponse correcte :</label>
        <input type="text" name="bonneReponseDirecte" id="bonneReponseDirecte" class="form-control" placeholder="Réponse attendue">
        <label for="tolerance">Tolérance :</label>
        <input type="number" name="tolerance" id="tolerance" min="0" value="0" class="form-control" placeholder="Tolérance en pourcentage">
        <span id="tolerance-percentage" class="percentage-display">0%</span>
    </div>

    <div class="form-group">
        <label for="points">Points :</label>
        <input type="number" name="points" id="points" min="1" value="1" required class="form-control">
    </div>

    <button type="submit" class="btn-primary">Ajouter la question</button>
</form>

<% if (exam.questions && exam.questions.length > 0) { %>
    <div class="questions-list">
        <h3>Questions déjà ajoutées :</h3>
        <ul>
            <% exam.questions.forEach((q, index) => { %>
                <li class="question-item">
                    <div class="question-header">
                        <strong><%= index + 1 %>.</strong> <%= q.enonce %> 
                        <span class="question-meta">
                            <%= q.type ? q.type.toUpperCase() : 'TYPE NON DÉFINI' %> - <%= q.points %> points
                        </span>
                    </div>

                    <% if (q.type === 'qcm') { %>
                        <ul class="choix-list">
                            <% q.choix.forEach((choix) => { %>
                                <li class="<%= choix === q.bonneReponse ? 'correct-answer' : '' %>">
                                    <%= choix %> <%= choix === q.bonneReponse ? '✓' : '' %>
                                </li>
                            <% }); %>
                        </ul>
                    <% } else { %>
                        <div class="direct-answer"><strong>Réponse attendue :</strong> <%= q.bonneReponse %></div>
                        <% if (q.tolerance) { %>
                            <div class="tolerance"><strong>Tolérance :</strong> <%= q.tolerance %>%</div>
                        <% } %>
                    <% } %>
                </li>
            <% }); %>
        </ul>
    </div>
<% } %>

<!-- Styles -->
<style>
    /* Global styling */
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        color: #333;
    }

    h2 {
        font-size: 1.8rem;
        color: #444;
        margin-bottom: 1rem;
    }

    h3 {
        font-size: 1.4rem;
        color: #007bff;
    }

    .form-group {
        margin-bottom: 1.2rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        margin-top: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #fff;
        box-sizing: border-box;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 0.8rem 1.2rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        padding: 0.8rem 1.2rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .choix-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .choix-input {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }

    .choix-input input {
        flex: 1;
    }

    .btn-remove {
        background-color: red;
        color: white;
        border: none;
        padding: 0.25rem 0.5rem;
        cursor: pointer;
        border-radius: 4px;
    }

    .questions-list {
        margin-top: 2rem;
    }

    .question-item {
        margin-bottom: 1.2rem;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #fff;
    }

    .question-header {
        font-weight: bold;
    }

    .question-meta {
        font-size: 0.9rem;
        color: #555;
    }

    .correct-answer {
        color: green;
    }

    .tolerance {
        margin-top: 0.5rem;
        font-style: italic;
        color: gray;
    }

    .form-group.mt-3 {
        margin-top: 1rem;
    }

    .percentage-display {
        font-weight: bold;
    }

    /* Responsive design */
    @media (max-width: 768px) {
        .form-control {
            padding: 0.5rem;
        }

        .btn-primary, .btn-secondary {
            padding: 0.6rem 1rem;
        }
    }
</style>

<script>
    const typeSelect = document.getElementById('type');
    const qcmFields = document.getElementById('qcm-fields');
    const directeFields = document.getElementById('directe-fields');
    const choixContainer = document.getElementById('choix-container');
    const addChoixBtn = document.getElementById('add-choix-btn');
    const bonneReponseSelect = document.getElementById('bonneReponse');
    const bonneReponseDirecte = document.getElementById('bonneReponseDirecte');
    const toleranceInput = document.getElementById('tolerance');
    const toleranceDisplay = document.getElementById('tolerance-percentage');

    toleranceInput.addEventListener('input', () => {
        const toleranceValue = toleranceInput.value;
        toleranceDisplay.textContent = `${toleranceValue}%`;
    });

    document.addEventListener('DOMContentLoaded', () => {
        toggleQuestionFields();
        updateBonneReponseOptions();
    });

    typeSelect.addEventListener('change', () => {
        toggleQuestionFields();
    });

    function toggleQuestionFields() {
        const isQcm = typeSelect.value === 'qcm';
        qcmFields.style.display = isQcm ? 'block' : 'none';
        directeFields.style.display = isQcm ? 'none' : 'block';

        if (isQcm) {
            bonneReponseDirecte.value = '';
        } else {
            bonneReponseSelect.innerHTML = '<option value="">Sélectionnez la bonne réponse</option>';
        }
    }

    addChoixBtn.addEventListener('click', () => {
        const choixInputs = choixContainer.querySelectorAll('input');
        const choixCount = choixInputs.length;

        const lastInput = choixInputs[choixCount - 1];
        if (lastInput && lastInput.value.trim() === '') {
            alert("Veuillez remplir le choix précédent avant d'en ajouter un nouveau.");
            return;
        }

        const div = document.createElement('div');
        div.className = 'choix-input';
        div.innerHTML = ` 
            <input type="text" name="choix[]" placeholder="Choix ${choixCount + 1}" class="form-control">
            <button type="button" class="btn-remove" onclick="removeChoix(this)">X</button>
        `;
        choixContainer.appendChild(div);
        updateBonneReponseOptions();
    });

    function removeChoix(button) {
        if (choixContainer.children.length <= 2) {
            alert("Une question QCM doit avoir au moins 2 choix.");
            return;
        }
        button.parentElement.remove();
        updateBonneReponseOptions();
    }

    function updateBonneReponseOptions() {
        const choixInputs = choixContainer.querySelectorAll('input');
        bonneReponseSelect.innerHTML = '<option value="">Sélectionnez la bonne réponse</option>';
        
        choixInputs.forEach((input, index) => {
            if (input.value.trim() !== '') {
                const option = document.createElement('option');
                option.value = input.value;
                option.textContent = input.value;
                bonneReponseSelect.appendChild(option);
            }
        });
    }

    document.querySelector('form').addEventListener('submit', (event) => {
        const isQcm = typeSelect.value === 'qcm';
        
        if (isQcm) {
            const choixInputs = choixContainer.querySelectorAll('input');
            const nonEmptyChoices = Array.from(choixInputs).filter(input => input.value.trim() !== '');

            if (nonEmptyChoices.length < 2) {
                event.preventDefault();
                alert("Une question QCM doit comporter au moins 2 choix.");
            }

            if (!bonneReponseSelect.value) {
                event.preventDefault();
                alert("Veuillez sélectionner la bonne réponse.");
            }
        } else {
            if (!bonneReponseDirecte.value.trim()) {
                event.preventDefault();
                alert("Veuillez entrer la réponse correcte.");
            }
            if (toleranceInput.value < 0) {
                event.preventDefault();
                alert("La tolérance doit être positive.");
            }
        }
    });
</script>
